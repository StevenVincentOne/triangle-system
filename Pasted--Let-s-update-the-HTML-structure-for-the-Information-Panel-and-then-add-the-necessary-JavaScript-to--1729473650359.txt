 Let's update the HTML structure for the Information Panel and then add the necessary JavaScript to perform and display these calculations.

First, let's update the HTML structure in the index.html file:

<div id="information-panel" class="bg-dark p-4 rounded">
    <h3 class="panel-header">Information Panel</h3>
    <div class="row">
        <div class="col-md-6">
            <h4>Distances</h4>
            <div class="label-value-pair">
                <label for="d-i-ic">d(I, IC):</label>
                <input id="d-i-ic" type="text" class="form-control" size="8" readonly>
            </div>
            <div class="label-value-pair">
                <label for="d-m-t-n1">d(M, T) N1:</label>
                <input id="d-m-t-n1" type="text" class="form-control" size="8" readonly>
            </div>
            <div class="label-value-pair">
                <label for="d-m-t-n2">d(M, T) N2:</label>
                <input id="d-m-t-n2" type="text" class="form-control" size="8" readonly>
            </div>
            <div class="label-value-pair">
                <label for="d-m-t-n3">d(M, T) N3:</label>
                <input id="d-m-t-n3" type="text" class="form-control" size="8" readonly>
            </div>
        </div>
        <div class="col-md-6">
            <h4>Ratios</h4>
            <div class="label-value-pair">
                <label for="r-i-ic">r(I, IC):</label>
                <input id="r-i-ic" type="text" class="form-control" size="8" readonly>
            </div>
            <div class="label-value-pair">
                <label for="r-m-t-n1">r(M, T) N1:</label>
                <input id="r-m-t-n1" type="text" class="form-control" size="8" readonly>
            </div>
            <div class="label-value-pair">
                <label for="r-m-t-n2">r(M, T) N2:</label>
                <input id="r-m-t-n2" type="text" class="form-control" size="8" readonly>
            </div>
            <div class="label-value-pair">
                <label for="r-m-t-n3">r(M, T) N3:</label>
                <input id="r-m-t-n3" type="text" class="form-control" size="8" readonly>
            </div>
        </div>
    </div>
</div>
Now, let's add a method to the TriangleSystem class in script.js to update the Information Panel:

updateInformationPanel() {
    const setElementValue = (selector, value) => {
        const element = document.querySelector(selector);
        if (element) {
            element.value = this.formatValue(value);
        }
    };
    // Calculate d(I, IC)
    const centroidX = (this.system.n1.x + this.system.n2.x + this.system.n3.x) / 3;
    const centroidY = (this.system.n1.y + this.system.n2.y + this.system.n3.y) / 3;
    const dIIC = this.calculateDistance({x: centroidX, y: centroidY}, this.system.incenter);
    setElementValue('#d-i-ic', dIIC);
    // Calculate r(I, IC)
    const rIIC = dIIC / this.calculatePerimeter();
    setElementValue('#r-i-ic', rIIC);
    // Calculate d(M, T) and r(M, T) for each node
    ['n1', 'n2', 'n3'].forEach((node, index) => {
        const nextNode = ['n2', 'n3', 'n1'][index];
        const midpoint = {
            x: (this.system[node].x + this.system[nextNode].x) / 2,
            y: (this.system[node].y + this.system[nextNode].y) / 2
        };
        const dMT = this.calculateDistance(midpoint, this.system.incenter);
        const rMT = dMT / this.calculatePerimeter();
        setElementValue(`#d-m-t-${node}`, dMT);
        setElementValue(`#r-m-t-${node}`, rMT);
    });
}
Now, we need to call this method in the updateDashboard method. Add this line at the end of the updateDashboard method:

this.updateInformationPanel();
This setup will calculate and display the distances and ratios in the Information Panel whenever the dashboard is updated.

Make sure to add any necessary methods for calculations if they don't already exist in your TriangleSystem class, such as:

calculateDistance(point1, point2) {
    const dx = point2.x - point1.x;
    const dy = point2.y - point1.y;
    return Math.sqrt(dx * dx + dy * dy);
}
These changes should add the new Information Panel functionality without disrupting the existing code. The calculations will update whenever the triangle system is modified, keeping the Information Panel in sync with the dashboard.